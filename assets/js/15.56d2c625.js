(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{381:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring5"}},[t._v("#")]),t._v(" Spring5")]),t._v(" "),s("h2",{attrs:{id:"_1-spring概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-spring概念"}},[t._v("#")]),t._v(" 1.Spring概念")]),t._v(" "),s("blockquote",[s("p",[t._v("IOC:控制反转，把创建对象过程交给Spring进行管理")]),t._v(" "),s("p",[t._v("AOP 面向切面，不修改源代码进行功能增强")])]),t._v(" "),s("h2",{attrs:{id:"_2-ioc容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ioc容器"}},[t._v("#")]),t._v(" 2.IOC容器")]),t._v(" "),s("h3",{attrs:{id:"_1、ioc底层原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、ioc底层原理"}},[t._v("#")]),t._v(" 1、IOC底层原理")]),t._v(" "),s("p",[t._v("xml解析、工厂模式、反射")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907915.png",alt:"image-20210608221901687"}})]),t._v(" "),s("p",[t._v("简单的工厂")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907381.png",alt:"image-20210608222613285"}})]),t._v(" "),s("h3",{attrs:{id:"ioc接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc接口"}},[t._v("#")]),t._v(" IOC接口")]),t._v(" "),s("h5",{attrs:{id:"_1-ioc思想基于ioc容器完成-ioc容器底层就是对象工厂"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-ioc思想基于ioc容器完成-ioc容器底层就是对象工厂"}},[t._v("#")]),t._v(" 1.IOC思想基于IOC容器完成，IOC容器底层就是对象工厂")]),t._v(" "),s("h5",{attrs:{id:"_2-spring提供ioc容器实现两种方式-两个接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-spring提供ioc容器实现两种方式-两个接口"}},[t._v("#")]),t._v(" 2.Spring提供IOC容器实现两种方式（两个接口）")]),t._v(" "),s("p",[t._v("（1）"),s("strong",[t._v("BeanFactory")]),t._v(" : IOC容器基本实现，是Spring内部使用的接口，一般不提供开发人员使用")]),t._v(" "),s("p",[t._v("​\t加载配置文件的时候不会创建对象，初次使用对象（使用）的时候才会去创建对象")]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("ApplicationContext")]),t._v(" BeanFactory接口的子接口，提供更多强大的功能，一般由开发人员进行使用")]),t._v(" "),s("p",[t._v("​\t加载配置文件的时候就会将配置文件的对象进行创建")]),t._v(" "),s("p",[t._v("ApplicationContext接口的实现类")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907165.png",alt:"image-20210608223719397"}})]),t._v(" "),s("p",[s("code",[t._v("ClaspathXmlApplicationContext")]),t._v(": 是根据项目的类路径查找配置文件")]),t._v(" "),s("p",[s("code",[t._v("FileSystemXmlApplicationContext")]),t._v("：是根据磁盘根路径查找配置文件")]),t._v(" "),s("h4",{attrs:{id:"_1、ioc操作bean管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、ioc操作bean管理"}},[t._v("#")]),t._v(" 1、IOC操作Bean管理")]),t._v(" "),s("ul",[s("li",[t._v("Spring创建对象")]),t._v(" "),s("li",[t._v("注入使用spring创建的对象")])]),t._v(" "),s("h4",{attrs:{id:"_2、bean-管理的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、bean-管理的两种方式"}},[t._v("#")]),t._v(" 2、Bean 管理的两种方式")]),t._v(" "),s("h5",{attrs:{id:"_1-基于xml配置文件方式实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基于xml配置文件方式实现"}},[t._v("#")]),t._v(" （1）基于xml配置文件方式实现")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--配置User类对象创建--\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.it.spring5.entity.User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h6",{attrs:{id:"bean标签的常用属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean标签的常用属性"}},[t._v("#")]),t._v(" bean标签的常用属性：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("id")]),t._v(" 唯一标识")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("class")]),t._v(" 类的全路径")])])]),t._v(" "),s("p",[t._v("创建对象的时候：默认也是执行"),s("strong",[t._v("无参数构造方法")]),t._v("完成对象创建")]),t._v(" "),s("h4",{attrs:{id:"_2-基于xml方式注入对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基于xml方式注入对象属性"}},[t._v("#")]),t._v(" （2）基于xml方式注入对象属性")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("DI 依赖注入：就是对象的属性注入")])]),t._v(" "),s("blockquote",[s("p",[t._v("第一种： 通过set方法注入属性")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907174.png",alt:"image-20210608231105863"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907395.png",alt:"image-20210608232029721"}})]),t._v(" "),s("blockquote",[s("p",[t._v("第二种：使用有参数的构造进行属性注入")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907711.png",alt:"image-20210608232430550"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907215.png",alt:"image-20210608232639043"}})]),t._v(" "),s("h6",{attrs:{id:"引用外部类作为属性注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用外部类作为属性注入"}},[t._v("#")]),t._v(" 引用外部类作为属性注入")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161907471.png",alt:"image-20210608234119118"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ChetWei/img/raw/master/img/202109161908312.png",alt:"image-20210608234339302"}})]),t._v(" "),s("h6",{attrs:{id:"注入属性-内部bean和级联赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注入属性-内部bean和级联赋值"}},[t._v("#")]),t._v(" 注入属性-内部bean和级联赋值")]),t._v(" "),s("p",[t._v("（2）基于注解方式实现属性注入")]),t._v(" "),s("h2",{attrs:{id:"_3-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-aop"}},[t._v("#")]),t._v(" 3.AOP")]),t._v(" "),s("h2",{attrs:{id:"_5-事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-事务管理"}},[t._v("#")]),t._v(" 5.事务管理")]),t._v(" "),s("h2",{attrs:{id:"_6-spring5-新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-spring5-新特性"}},[t._v("#")]),t._v(" 6.Spring5 新特性")])])}),[],!1,null,null,null);a.default=r.exports}}]);